<div class="modal @modalClass" 
     style="display: @modalDisplay; overflow: auto;"
     role="dialog"
     data-bs-backdrop="static" 
     data-bs-keyboard="false" 
     tabindex="-1">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5">@Title</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="Close"></button>
            </div>
            <div class="modal-body">
                @BodyContent
            </div>
            @if (FooterContent != null)
            {
                <div class="modal-footer">
                    @FooterContent
                </div>
            }
        </div>
    </div>
</div>

@if (showBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}

@code {
    [Parameter] public string? Title { get; set; }
    [Parameter] public RenderFragment? BodyContent { get; set; }
    [Parameter] public RenderFragment? FooterContent { get; set; }
    [Parameter] public EventCallback OnOpen { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }

    private string modalDisplay = "none;";
    private string modalClass = string.Empty;
    private bool showBackdrop = false;

    public async Task Open()
    {
        modalDisplay = "block";
        modalClass = "show";
        showBackdrop = true;
        await OnOpen.InvokeAsync();
    }

    public async Task Close()
    {
        modalDisplay = "none";
        modalClass = string.Empty;
        showBackdrop = false;
        await OnClose.InvokeAsync();
    }
}
